# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ exp/** ]
  pull_request:
    branches:
      - 'exp/**'
      - 'dev'
      - 'main'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Create one of more workflows at this level, the next is called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.8"]
        os: [ubuntu-latest]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      # Initialize conda environment
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          auto-activate-base: true
          activate-environment: ""

      # Show the environment of the runner
      - name: Environment
        run: |
          echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
          echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
          echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
          echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
          echo "🖥️ The workflow is now ready to test your code on the runner."
          mkdir -p output
          uname -a > output/env_${{ matrix.python-version }}.txt
          pwd >> output/env_${{ matrix.python-version }}.txt
          df -h >> output/env_${{ matrix.python-version }}.txt
          df -h . >> output/env_${{ matrix.python-version }}.txt
          printenv >> output/env_${{ matrix.python-version }}.txt

      # The worker drops you in the middle of your checked out repository
      - name: Install
        run: |
          conda create --quiet --yes --name gridTools --file conda/gridtools_${{ matrix.python-version }}.txt
          conda activate gridTools
          conda install --quiet --yes pytest
          python -m pip install -q -e .
          pip list > output/pip.txt
          conda list --explicit > output/conda_${{ matrix.python-version }}.txt
          conda env list > output/conda_${{ matrix.python-version }}.yml

      # Run tests
      - name: Tests
        shell: bash -l {0}
        run: |
          cd ${{ github.workspace }}
          conda activate gridTools
          cd tests
          pytest -rA

      # Archive output to github artifacts
      - name: Archive
        uses: actions/upload-artifact@v3
        with:
          name: artifact-output
          path: output/*
